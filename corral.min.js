(function(d){var k=function(a){return void 0!==a&&null!==a},s,e={},t=function(){for(var a in e)e.hasOwnProperty(a)&&e[a].check()},u=["enter","exit"],v=["min","max","both"],q=function(a){try{m(a)}catch(b){return!1}return!0},m=function(a){a=a.split("-");if("[object Array]"!=={}.toString.call(a)||2>a.length)throw Error("parseEventName(): event name doesn't seem to have a hyphen");if(!(-1<u.indexOf(a[0])))throw Error("parseEventName(): action part of event name is invalid");if(!(-1<v.indexOf(a[1])))throw Error("parseEventName(): fence part of event name is invalid");
return{action:a[0],fence:a[1]}},n=function(a){var b=[];if("[object Array]"!=={}.toString.call(a))if("function"===typeof a)a=[a];else throw Error("sanitiseCallbacks(): callbacks argument was not a function or array");for(var c in a)if(a.hasOwnProperty(c))if("function"==typeof a[c])b.push(a[c]);else throw Error("sanitiseCallbacks(): got a bad callback -- wasn't a function");return b},h=d.Corral=function(a,b,c,d,i){var h={name:a,axis:b,min:null,max:null},g={min:{enter:[],exit:[],active:!1},max:{enter:[],
exit:[],active:!1},both:{enter:[],exit:[],active:!1}},l=e[a]=this;k(c)&&(h.min=c);k(d)&&(h.max=d);if("object"===typeof i){if(!i.hasOwnProperty("min")&&!i.hasOwnProperty("max")&&!i.hasOwnProperty("both")&&(i.hasOwnProperty("enter")||i.hasOwnProperty("exit")))i={both:i};for(var j in i)i.hasOwnProperty(j)&&g.hasOwnProperty(j)&&(g[j].enter=n(i[j].enter),g[j].exit=n(i[j].exit))}var p=function(a,b){if(void 0===b)return h[a];h[a]=b};this.name=function(a){return p("name",a)};this.axis=function(a){return p("axis",
a)};this.min=function(a){return p("min",a)};this.max=function(a){return p("max",a)};this.isActive=function(a){if(g.hasOwnProperty(a))return g[a].active;throw Error("Corral.isActive(): invalid fence name");};this.on=function(a,b){if(q(a)){var b=n(b),c=m(a),f;for(f in b)if(b.hasOwnProperty(f)){if(l.isActive(c.fence)===("enter"===c.action))b[f]();g[c.fence][c.action].push(b[f])}}else throw Error("Corral.on(): unknown event name "+a);};this.off=function(a,b){var c;if(q(a)){var f=m(a,"constraint");if(void 0!==
b)if(b=n(b),void 0!==b)for(c in b){if(b.hasOwnProperty(c)){var d=g[f.fence][f.action].indexOf(b[c]);-1<d&&delete g[f.callback.fence][f.action][d]}}else throw Error("Corral.off(): no valid callbacks passed");else for(c in g[f.callback.fence][f.callback.action])g[f.callback.fence][f.callback.action].hasOwnProperty(c)&&delete g[f.callback.fence][f.callback.action][c]}else throw Error("Corral.off(): unknown eventName "+a);};this.trigger=function(a,b,c){"boolean"!==typeof c&&(c=!0);if(q(a)){var a=m(a),
f=g[a.fence];if(l.isActive(a.fence)!==("enter"===a.action)||b){for(var d=0;d<f[a.action].length;d++)f[a.action][d]();f.active="enter"===a.action;"both"===a.fence?g.min.active=g.max.active=f.active:c&&l.isActive("min"===a.fence?"max":"min")&&l.isActive("both")!==("enter"===a.action)&&!b&&l.trigger(a.action+"-both")}}else throw Error("Corral.trigger(): unknown eventName "+a+", or else eventName has 'both' in it");};this.check()};h.prototype.remove=function(){h.remove(this)};h.prototype.check=function(){var a=
["min","max"],b,c;for(c in a)if(a.hasOwnProperty(c)){b=a[c];var e;e=this.queryString(b);e="function"===typeof d.matchMedia?d.matchMedia(e).matches:"object"===typeof d.Modernizr&&"function"===typeof d.Modernizr.mq?Modernizr.mq(e):!1;e?this.isActive(b)||this.trigger("enter-"+b):this.isActive(b)&&this.trigger("exit-"+b)}};h.prototype.queryString=function(a){if("min"===a||"max"===a){var b=this[a]();k(b)||(b="min"===a?"1px":"20000px");return"("+a+"-"+this.axis()+":"+b+")"}throw Error("Corral.queryString(): fence should be min or max");
};h.remove=function(a){a=a instanceof h?a.name:a;return e.hasOwnProperty(a)?(delete e[a],!0):!1};h.get=function(a){if(e.hasOwnProperty(a))return e[a]};h.breakpoints=function(){var a={},b,c,d;for(b in e)e.hasOwnProperty(b)&&(d=e[b],c={},c.axis=d.axis(),k(e[a].min())&&(c.min=e[a].min()),k(e[a].max())&&(c.max=e[a].max()),a[b]=c);return a};var r=function(){d.clearTimeout(s);s=d.setTimeout(t,100)};d.addEventListener?d.addEventListener("resize",r,!1):d.attachEvent?d.attachEvent("onresize",r):d.onresize=
r})(window);